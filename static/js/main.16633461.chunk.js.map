{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","addEventKeyToState","event","key","setState","document","addEventListener","this","removeEventListener","length","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,mBAAqB,SAACC,GACpB,IAAMF,EAAaE,EAAMC,IAEzB,EAAKC,SAAS,CAAEJ,gBAhBpB,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,sBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,sBAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACEA,EAAWS,OAAS,EAEhB,qBAAKC,UAAU,MAAf,SACE,oBAAGA,UAAU,eAAb,sCAEGV,EAFH,SAQF,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,2CAnCZ,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.16633461.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.addEventKeyToState);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.addEventKeyToState);\n  }\n\n  addEventKeyToState = (event: KeyboardEvent) => {\n    const pressedKey = event.key;\n\n    this.setState({ pressedKey });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      pressedKey.length > 0\n        ? (\n          <div className=\"App\">\n            <p className=\"App__message\">\n              The last pressed key is [\n              {pressedKey}\n              ]\n            </p>\n          </div>\n        )\n        : (\n          <div className=\"App\">\n            <p className=\"App__message\">\n              Nothing was pressed yet\n            </p>\n          </div>\n        )\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}